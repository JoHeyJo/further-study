{"ast":null,"code":"var _jsxFileName = \"/Users/jf/Desktop/Rithm25/furtherStudy/react/ts-react/boxes/src/BoxList.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Box from \"./Box\";\nimport NewBoxForm from \"./NewBoxForm\";\n/** Manage list of boxes\n *\n * State:\n * - boxes: [ { id, width, height, backgroundColor }, ... ]\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BoxList() {\n  _s();\n\n  const [boxes, setBoxes] = useState([]);\n  /** add box with given { id, width, height, backgroundColor } */\n\n  function add(newBox) {\n    setBoxes(boxes => [...boxes, newBox]);\n  }\n  /** remove box matching that id. */\n\n\n  function remove(id) {\n    setBoxes(boxes => boxes.filter(box => box.id !== id));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NewBoxForm, {\n      createBox: add\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), boxes.map(_ref => {\n      let {\n        id,\n        width,\n        height,\n        backgroundColor\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(Box, {\n        id: id,\n        width: width,\n        height: height,\n        remove: remove(id),\n        backgroundColor: backgroundColor\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BoxList, \"s4hLDv7qD+qe7+ixkHVJtveXRJo=\");\n\n_c = BoxList;\nexport default BoxList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BoxList\");","map":{"version":3,"names":["React","useState","Box","NewBoxForm","BoxList","boxes","setBoxes","add","newBox","remove","id","filter","box","map","width","height","backgroundColor"],"sources":["/Users/jf/Desktop/Rithm25/furtherStudy/react/ts-react/boxes/src/BoxList.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Box from \"./Box\";\nimport NewBoxForm from \"./NewBoxForm\";\n\n/** Manage list of boxes\n *\n * State:\n * - boxes: [ { id, width, height, backgroundColor }, ... ]\n */\n\ninterface BoxInterface {\n  id: string;\n  width: number | 5;\n  height: number | 5;\n  backgroundColor: string;\n  // remove(id:string): string;\n}\n\nfunction BoxList() {\n  const [boxes, setBoxes] = useState<BoxInterface[]>([])\n\n  /** add box with given { id, width, height, backgroundColor } */\n  function add(newBox: BoxInterface) {\n    setBoxes(boxes => [...boxes, newBox]);\n  }\n\n  /** remove box matching that id. */\n  function remove(id: string): void {\n    setBoxes(boxes => boxes.filter(box => box.id !== id));\n  }\n\n  return (\n    <div>\n      <NewBoxForm createBox={add} />\n      {boxes.map(({ id, width, height, backgroundColor }) => (\n        <Box\n          key={id}\n          id={id}\n          width={width}\n          height={height}\n          remove={remove(id)}\n          backgroundColor={backgroundColor}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default BoxList;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA;AACA;AACA;AACA;AACA;;;;AAUA,SAASC,OAAT,GAAmB;EAAA;;EACjB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAiB,EAAjB,CAAlC;EAEA;;EACA,SAASM,GAAT,CAAaC,MAAb,EAAmC;IACjCF,QAAQ,CAACD,KAAK,IAAI,CAAC,GAAGA,KAAJ,EAAWG,MAAX,CAAV,CAAR;EACD;EAED;;;EACA,SAASC,MAAT,CAAgBC,EAAhB,EAAkC;IAChCJ,QAAQ,CAACD,KAAK,IAAIA,KAAK,CAACM,MAAN,CAAaC,GAAG,IAAIA,GAAG,CAACF,EAAJ,KAAWA,EAA/B,CAAV,CAAR;EACD;;EAED,oBACE;IAAA,wBACE,QAAC,UAAD;MAAY,SAAS,EAAEH;IAAvB;MAAA;MAAA;MAAA;IAAA,QADF,EAEGF,KAAK,CAACQ,GAAN,CAAU;MAAA,IAAC;QAAEH,EAAF;QAAMI,KAAN;QAAaC,MAAb;QAAqBC;MAArB,CAAD;MAAA,oBACT,QAAC,GAAD;QAEE,EAAE,EAAEN,EAFN;QAGE,KAAK,EAAEI,KAHT;QAIE,MAAM,EAAEC,MAJV;QAKE,MAAM,EAAEN,MAAM,CAACC,EAAD,CALhB;QAME,eAAe,EAAEM;MANnB,GACON,EADP;QAAA;QAAA;QAAA;MAAA,QADS;IAAA,CAAV,CAFH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAeD;;GA5BQN,O;;KAAAA,O;AA8BT,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}